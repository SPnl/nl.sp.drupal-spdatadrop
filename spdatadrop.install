<?php

/**
 * @file
 * Database definition.
 */

/**
 * Implements hook_uninstall().
 */
function spdatadrop_uninstall() {
  // Remove any variables we created.
  variable_del('spdatadrop_sync_type');
  variable_del('spdatadrop_cron_number');
  variable_del('spdatadrop_secret');
  variable_del('spdatadrop_sync_is_running');
  variable_del('spdatadrop_sync_start_time');
}

/**
 * Implements hook_schema().
 */
function spdatadrop_schema() {
  $schema['spdatadrop_syncstate'] = array(
    'description' => 'Status of datadrop submission processing.',
    'fields' => array(
      'id' => array(
        'description' => 'Primary key.',
        'type' => 'serial',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'date' => array(
        'description' => 'The Unix timestamp when the submission was added to the queue.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'source_domain' => array(
        'description' => 'The data source domain.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'source_title' => array(
        'description' => 'A description of the data source (form title).',
        'type' => 'varchar',
        'length' => 255,
        'not null' => TRUE,
      ),
      'source_id' => array(
        'description' => 'The id of the data source (form id).',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'source_ip' => array(
        'description' => 'The ip address of the submission.',
        'type' => 'varchar',
        'length' => 46,
        'not null' => TRUE,
      ),
      'submission_id' => array(
        'description' => 'The id of the data submission.',
        'type' => 'int',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'submission_data' => array(
        'descripton' => 'Submisson data',
        'type' => 'text',
        'size' => 'normal',
        'not null' => TRUE,
      ),
      'debug_info' => array(
        'descripton' => 'Debug information',
        'type' => 'text',
        'size' => 'normal',
        'not null' => TRUE,
      ),
      'state' => array(
        'description' => 'The submission state (0=not processed, 1=synced, 2=error, 3=insufficient data, 4=contact id not found).',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
      ),
      'callback_path' => array(
        'description' => 'The callback path to return the contact id to.',
        'type' => 'varchar',
        'length' => 255,
      ),
      'callback_state' => array(
        'description' => 'The callback state (0=not processed, 1=processed, 2=error).',
        'type' => 'int',
        'size' => 'tiny',
        'default' => 0,
        'not null' => TRUE,
      ),
      'contact_id' => array(
        'description' => 'The civicrm contact id.',
        'type' => 'int',
        'not null' => FALSE,
      ),
      'secret' => array(
        'description' => 'A secret used to create unsubscribe link.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
    ),
    'primary key' => array(
      'id',
    ),
  );

  $schema['spdatadrop_unsubscribe'] = array(
    'description' => 'Unsubscribe submissions.',
    'fields' => array(
      'id' => array(
        'description' => 'Primary key.',
        'type' => 'serial',
        'size' => 'big',
        'not null' => TRUE,
      ),
      'date' => array(
        'description' => 'The Unix timestamp when the submission was added to the queue.',
        'type' => 'int',
        'not null' => TRUE,
        'default' => 0,
      ),
      'secret' => array(
        'description' => 'A unique secret for each unsubscribe link.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => FALSE,
      ),
      'unsubscribe' => array(
        'description' => 'Unsubscribe from group(s).',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => TRUE,
      ),
      'is_opt_out' => array(
        'description' => 'No mails.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => FALSE,
      ),
      'do_not_phone' => array(
        'description' => 'No phone calls.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => FALSE,
      ),
      'do_not_sms' => array(
        'description' => 'No sms.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => FALSE,
      ),
      'state' => array(
        'description' => 'The unsubscribe state.',
        'type' => 'int',
        'size' => 'tiny',
        'not null' => FALSE,
      ),
    ),
    'primary key' => array(
      'id',
    ),
  );
  return $schema;
}

/**
 * Add ip addres column.
 */
function spdatadrop_update_7001() {
  if (!db_field_exists('spdatadrop_syncstate', 'source_ip')) {
    $schema = spdatadrop_schema();
    $spec = $schema['spdatadrop_syncstate']['fields']['source_ip'];
    db_add_field('spdatadrop_syncstate', 'source_ip', $spec);
  }
}

/**
 * Add date column.
 */
function spdatadrop_update_7002() {
  if (!db_field_exists('spdatadrop_syncstate', 'date')) {
    $schema = spdatadrop_schema();
    $spec = $schema['spdatadrop_syncstate']['fields']['date'];
    db_add_field('spdatadrop_syncstate', 'date', $spec);
  }
}

/**
 * Add contact_id column.
 */
function spdatadrop_update_7003() {
  if (!db_field_exists('spdatadrop_syncstate', 'contact_id')) {
    $schema = spdatadrop_schema();
    $spec = $schema['spdatadrop_syncstate']['fields']['contact_id'];
    db_add_field('spdatadrop_syncstate', 'contact_id', $spec);
  }
}

/**
 * Add secret column.
 */
function spdatadrop_update_7004() {
  if (!db_field_exists('spdatadrop_syncstate', 'secret')) {
    $schema = spdatadrop_schema();
    $spec = $schema['spdatadrop_syncstate']['fields']['secret'];
    db_add_field('spdatadrop_syncstate', 'secret', $spec);
  }
}

/**
 * Add unsubscribe table.
 */
function spdatadrop_update_7005() {
  if (!db_table_exists('spdatadrop_unsubscribe')) {
    $schema = spdatadrop_schema();
    $spec = $schema['spdatadrop_unsubscribe'];
    db_create_table('spdatadrop_unsubscribe', $spec);
  }
}

/**
 * Add unsubscribe, do_not_phone, do_not_sms, and is_opt_out columns.
 */
function spdatadrop_update_7006() {
  $schema = spdatadrop_schema();
  if (!db_field_exists('spdatadrop_unsubscribe', 'unsubscribe')) {
    $spec = $schema['spdatadrop_unsubscribe']['fields']['unsubscribe'];
    db_add_field('spdatadrop_unsubscribe', 'unsubscribe', $spec);
  }
  if (!db_field_exists('spdatadrop_unsubscribe', 'is_opt_out')) {
    $spec = $schema['spdatadrop_unsubscribe']['fields']['is_opt_out'];
    db_add_field('spdatadrop_unsubscribe', 'is_opt_out', $spec);
  }
  if (!db_field_exists('spdatadrop_unsubscribe', 'do_not_phone')) {
    $spec = $schema['spdatadrop_unsubscribe']['fields']['do_not_phone'];
    db_add_field('spdatadrop_unsubscribe', 'do_not_phone', $spec);
  }
  if (!db_field_exists('spdatadrop_unsubscribe', 'do_not_sms')) {
    $spec = $schema['spdatadrop_unsubscribe']['fields']['do_not_sms'];
    db_add_field('spdatadrop_unsubscribe', 'do_not_sms', $spec);
  }
}

/**
 * Adds callback_path and callback_state fields.
 */
function spdatadrop_update_7007() {
  $schema = spdatadrop_schema();
  if (!db_field_exists('spdatadrop_syncstate', 'callback_path')) {
    $spec = $schema['spdatadrop_syncstate']['fields']['callback_path'];
    db_add_field('spdatadrop_syncstate', 'callback_path', $spec);
  }
  if (!db_field_exists('spdatadrop_syncstate', 'callback_state')) {
    $spec = $schema['spdatadrop_syncstate']['fields']['callback_state'];
    db_add_field('spdatadrop_syncstate', 'callback_state', $spec);
  }
}
